(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{457:function(a,e,n){"use strict";n.r(e);var r=n(65),o=Object(r.a)({},(function(){var a=this,e=a.$createElement,n=a._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"navegacion"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#navegacion"}},[a._v("#")]),a._v(" Navegación")]),a._v(" "),n("h2",{attrs:{id:"conceptos-basicos"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#conceptos-basicos"}},[a._v("#")]),a._v(" Conceptos Básicos")]),a._v(" "),n("p",[a._v("Denominamos navegación al hecho de ir de una página a otra dentro de una aplicación Web.\nDentro de esta sección analizaremos las consideraciones que se deben tener al resolver la\nnavegación de una aplicación y cómo implementar distintos escenarios de navegación con\nel diseñador.")]),a._v(" "),n("h2",{attrs:{id:"ir-a-otra-pagina"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ir-a-otra-pagina"}},[a._v("#")]),a._v(" Ir a otra Página")]),a._v(" "),n("p",[a._v("Para ir desde una página a otra, no se puede hacer directamente un Call. El modelo estándar\nde navegación en Web presenta una libertad muy grande, y puede introducir problemas de\nseguridad al utilizarlo en aplicaciones. El diseñador implementa un mecanismo de\nnavegación más adaptado a las necesidades de una aplicación y fortaleciendo el esquema\nde seguridad. Por este motivo la navegación se debe hacer a través de subrutinas generadas\npor el diseñador.")]),a._v(" "),n("p",[a._v("Por ejemplo, si estamos en un WebPanel y queremos ir al WebPanel NuevoWbp haciendo la\nllamada con dos parámetros (Param1 y Param2), en lugar de:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[a._v("** Call(HNuevoWbp, &Param1, &Param2) \n")])])]),n("p",[a._v("Tenemos que hacer:")]),a._v(" "),n("div",{staticClass:"language-genexus line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("&GP_Url = Link(HNuevoWbp, &Param1, &Param2)\nDo 'GP: Ir con retorno a &GP_Url'\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("p",[a._v("La subrutina “GP: Ir con retorno a &GP_Url” actúa como el Call, realizando la llamada a la\npágina asignada en la variable GP_Url. La subrutina anterior no se genera por defecto, y para\nque el diseñador genere esta subrutina se debe asignar el valor returnable al atributo\ngenerateCall (del elemento web-ui).")]),a._v(" "),n("p",[a._v("Existen dos tipos de llamadas:")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("Con retorno: Al hacer una llamada con retorno se brinda la posibilidad de volver a la\npágina que hizo la llamada. Cuando se hace una llamada de este tipo el usuario\npuede volver a la página anterior al presionar el botón “Anterior” (representado con\nuna flecha a la izquierda en el extremo superior izquierdo de la pantalla). Al hacer\nuna llamada de este tipo también podemos volver a la página anterior desde código\n(utilizando el atributo generateReturn). Las llamadas con retorno se realizan\ninvocando a la subrutina “GP: Ir con retorno a &GP_Url”, para que el diseñador genere\nesta subrutina se debe asignar el valor returnable o both al atributo generateCall\n(dentro de web-ui).")])]),a._v(" "),n("li",[n("p",[a._v("Sin retorno: Al hacer una llamada sin retorno, la página anterior se pierde y no se\npuede volver a ella con el botón “Anterior”, ni desde código GeneXus. Este tipo de\nllamadas se realizan invocando a la subrutina “GP: Ir sin retorno a &GP_Url”, para\ngenerar esta subrutina se debe asignar el valor notReturnable o both al atributo\ngenerateCall (dentro de web-ui).")])])]),a._v(" "),n("p",[a._v("En la mayoría de los casos se deben utilizar llamadas con retorno, ya que, por lo general\nvamos a necesitar volver a la página anterior. Por ejemplo, si tenemos un “trabajar con” con\nla lista de países, y al presionar el botón “Agregar” navegamos a una nueva página para\ndefinir los datos del país. Luego que terminamos de agregar un nuevo país vamos a desear\nvolver a la página anterior, por lo tanto, se debe hacer una llamada con retorno a la página\nde ingreso de datos del país.")]),a._v(" "),n("p",[a._v("Únicamente utilizamos llamadas sin retorno cuando el usuario no debe volver a la página\nanterior. Esto puede ocurrir si tenemos alguna operación que se realiza en varios pasos (es\ndecir, está dividida en varias páginas, y cada vez que completa una página pasa a la\nsiguiente), y no queremos que pueda volver atrás y modificar los datos de un página que ya\nhabía completado.")]),a._v(" "),n("p",[a._v("En resumen, para hacer una llamada a otra página:")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("Hay que agregar el atributo generateCall al elemento web-ui. Si queremos hacer\nllamadas con retorno le debemos asignar returnable, si queremos hacer llamadas sin\nretorno le debemos asignar notReturnable y se necesitamos realizar ambos tipos de\nllamadas le debemos asignar both.")])]),a._v(" "),n("li",[n("p",[a._v("Al agregar el atributo anterior se generan la variable GP_Url y la/s subrutina/s para\nhacer las llamadas ( “GP: Ir con retorno a &GP_Url” y/o “GP: Ir sin retorno a &GP_Url”)")])]),a._v(" "),n("li",[n("p",[a._v("Finalmente para ir a otra página hay que utilizar la función Link con el nombre del\nobjeto y los parámetros. El resultado de esta función se debe asignar a la variable\nGP_Url e invocar a una de las subrutinas anteriores.")])])]),a._v(" "),n("h2",{attrs:{id:"ir-a-otra-pagina-dinamicamente"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ir-a-otra-pagina-dinamicamente"}},[a._v("#")]),a._v(" Ir a otra Página (Dinámicamente)")]),a._v(" "),n("p",[a._v("La función Link no se puede invocar pasándole una variable en lugar del nombre del\nprograma, ya que, por decisiones de diseño en GeneXus no funciona correctamente en estos\ncasos. Para poder realizar correctamente navegaciones dinámicas se debe invocar al\nprocedimiento FRVarLink luego de invocar a la función Link.")]),a._v(" "),n("p",[a._v("Por ejemplo, para ir con retorno al WebPanel de la variable NomProg con los parámetros\nParam1 y Param2 se debe escribir el siguiente código:")]),a._v(" "),n("div",{staticClass:"language-genexus line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("&GP_Url = Link(&NomProg, &Param1, &Param2)\nCall(PFRVarLink, &GP_Url)\nDo 'GP: Ir con retorno a &GP_Url' \n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("p",[a._v("Si el nombre del programa se obtiene de una tabla, es recomendable invocar a la función\nTrim con el mismo (antes que la función Link) para quitarle los espacios sobrantes. Cuando\nse hace una llamada dinámica el nombre del programa no puede contener espacios, y si se\nobtiene de un atributo de tipo Character, GeneXus completa el valor con espacios adicionales\nhasta el largo del atributo, por lo cual es necesario quitarlos antes con la función Trim.")]),a._v(" "),n("p",[a._v("En caso de invocar a la función Link con el nombre de un programa entre comillas (por\nejemplo Link(„HProg1‟)) se puede presentar un caso similar. Si el programa que está entre\ncomillas es parte de la Base de Conocimiento, GeneXus se comporta como si hubiéramos\nhecho la invocación sin las comillas. En cambio, si el programa no esta en la Base de\nConocimiento la situación es similar a si hiciéramos el Link con una variable y asignáramos\na la variable un texto con el nombre del programa. Es decir, en este último caso también\ntendríamos que invocar al procedimiento FRVarLink para corregir el resultado de la función\nLink.")]),a._v(" "),n("h2",{attrs:{id:"volver-a-la-pagina-anterior"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#volver-a-la-pagina-anterior"}},[a._v("#")]),a._v(" Volver a la Página Anterior")]),a._v(" "),n("p",[a._v("Si estamos posicionado en una página y queremos volver a la anterior, debemos invocar a la\nsubrutina “GP: Volver”, este mecanismo es análogo al comando Return de GeneXus. La\nsubrutina de volver no se genera por defecto, y para que el diseñador la genere se debe\nasignar true al atributo generateReturn.")]),a._v(" "),n("p",[a._v("Al volver a la página anterior con el botón “Anterior” (la flecha ubicada en la esquina superior\nizquierda) la página queda exactamente en el estado que se había dejado. Sin embargo, al\nvolver utilizando la subrutina “GP: Volver” se puede indicar que se vuelvan a cargar los datos\nde la página anterior, por ejemplo, para reflejar los cambios en una tabla. Supongamos que\ntenemos una página Web con una lista de países, y apretamos el botón “Agregar” para definir\nun nuevo país. Al apretar dicho botón se abriría una nueva página donde ingresamos los\ndatos del país, luego aceptamos el alta del país, y tendríamos que volver a la página anterior.\nSería deseable que al volver veamos el nuevo país en la lista de países, por lo tanto, en este\ncaso es necesario que al volver se actualicen los datos de la grilla de países.")]),a._v(" "),n("p",[a._v("Para controlar si al volver se vuelve a cargar una página utilizamos el atributo autoRefresh\nde las operaciones. Este atributo sirve para indicar si al ejecutar una operación se actualizan\nlas grillas de la página. Existen básicamente dos escenarios:")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("La operación no navega a otra página: Este escenario abarca cuando por ejemplo\ndentro de la operación invocamos un procedimiento para borrar un registro de una\ntabla, y luego queremos que se actualice la grilla para reflejar los cambios.")])]),a._v(" "),n("li",[n("p",[a._v("La operación navega a otra página: Este es el escenario que nos interesa aquí. Se\npresenta cuando dentro de la operación escribimos código para ir a otra página (por\nejemplo, en el botón “Agregar” de la página para administrar los países navega a una\nnueva página para ingresar los datos del país). En este escenario se debe asignar\ntrue al atributo autoRefresh de la operación “Agregar” para que al volver a la página\nluego de agregar el país, se carguen nuevamente todas las grillas y dependencias (es\ndecir, al volver se invocarán todas las subrutinas de carga para actualizar los datos\nde la página)")])])]),a._v(" "),n("h2",{attrs:{id:"volver-a-la-pagina-anterior-cambiando-los-parametros"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#volver-a-la-pagina-anterior-cambiando-los-parametros"}},[a._v("#")]),a._v(" Volver a la Página Anterior (Cambiando los Parámetros)")]),a._v(" "),n("p",[a._v("Existe una variación del caso anterior que consiste en volver a la página anterior, pero\ncambiando los valores de sus parámetros. Esto sirve, por ejemplo, para devolver a la página\nanterior información que le permita determinar si se ejecutó la operación con éxito o no. Por\nejemplo, la página para agregar nuevos países podría volver a la página de mantenimiento\nde países cambiando los parámetros para indicarle si se agregó realmente un país o no.")]),a._v(" "),n("p",[a._v("La forma de hacer esto es similar al mecanismo anterior. Se debe asignar true al atributo\ngenerateReturn (dentro del elemento web-ui), e invocar a la subrutina “GP: Volver”. La única\ndiferencia es que antes de invocar a la subrutina se debe asignar a la variable “GP_NuevaUrl”\nel resultado de invocar a la función Link del objeto con los nuevos parámetros.")]),a._v(" "),n("p",[a._v("Por ejemplo, para volver al WebPanel WbpAnt pasa")]),a._v(" "),n("div",{staticClass:"language-genexus line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("&GP_NuevaUrl = Link(HWbpAnt, &Var1, &Var2)\nDo 'GP: Volver'\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("p",[a._v("Al utilizar este mecanismo se debe tener en cuenta que si se vuelve a una página previa\ncambiando los parámetros se vuelve a cargar completamente la página. Esto significa que  se vuelve a ejecutar el Start y si tenemos cargado algún valor en la interfaz se perderá. Si no\ncambiamos los parámetros, es decir, si no asignamos ningún valor a GP_NuevaUrl se\nmantienen los valores cargados en la interfaz, y no se vuelve a ejecutar el Start.")]),a._v(" "),n("h2",{attrs:{id:"abrir-un-reporte"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#abrir-un-reporte"}},[a._v("#")]),a._v(" Abrir un Reporte")]),a._v(" "),n("p",[a._v("El mecanismo que se debe utilizar para abrir un reporte es el método convencional que ofrece\nGeneXus, simplemente se debe invocar al comando Call con el reporte.")]),a._v(" "),n("p",[a._v("Para poder invocar los reportes de esta forma tienen que estar definidos con salida PDF. A\ncontinuación se listan los pasos que se deben seguir:")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("Definir la regla: output_file(“test.pdf”, “pdf”); (el nombre del archivo se ignora porque\nse generará en memoria, así que se puede poner cualquier nombre)")])]),a._v(" "),n("li",[n("p",[a._v("Asignar el valor “Only To Screen” a la propiedad “Report output” • Declarar el objeto\ncomo “main”.")])]),a._v(" "),n("li",[n("p",[a._v('Asignar el valor “HTTP" a la propiedad “Call protocol”')])])]),a._v(" "),n("p",[a._v("En el siguiente ejemplo se muestra cómo hacer una invocación normal al reporte con nombre\n“Reporte”:")]),a._v(" "),n("div",{staticClass:"language-genexus line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("Call(RReporte, &Cod) \n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])]),n("p",[a._v("En caso de querer hacer una invocación dinámica también se hace de la forma habitual,\nsimplemente se tiene precaución de poner una “o” como prefijo del nombre, ya que el reporte\nes “main”. A continuación se muestra un ejemplo:")]),a._v(" "),n("div",{staticClass:"language-genexus line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('&Reporte = "OReporte"\nCall(&Reporte, &Cod) \n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("h2",{attrs:{id:"marcas-de-navegacion"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#marcas-de-navegacion"}},[a._v("#")]),a._v(" Marcas de Navegación")]),a._v(" "),n("p",[a._v("Las marcas de navegación se crean para resolver escenarios en que necesitamos volver a\nuna página particular dentro de una secuencia de páginas. Por ejemplo, supongamos que\ndefinimos una operación que se realiza en varios pasos, y por cada paso se abre una nueva\npágina, pero luego de terminar el último paso queremos volver a la primera página. En esta\nsituación se debe definir una marca de navegación en la primer página, y en el último paso\ninvocar a un comando para volver a la página que se marcó.")]),a._v(" "),n("p",[a._v("Las marcas de navegación se definen con el atributo navigationMark (dentro del elemento\nweb-ui). Una marca es simplemente un texto que permite identificar a la página, si queremos\nvolver a una página específica utilizamos su marca de generación para identificarla.")]),a._v(" "),n("img",{staticClass:"center",attrs:{src:a.$withBase("/img/20.png")}}),a._v(" "),n("p",[a._v("Por ejemplo, supongamos que tenemos una página desde la cual administramos los\nempleados de una empresa. Dentro de esta página podemos agregar nuevos empleados, y\ntambién, modificar o borrar uno existente. La página anterior será el WebPanel\nWWEmpleados. Debido a que queremos registrar muchos datos de los empleados, hemos\ndividido la información en tres páginas (que están definidas en los WebPanels EmpDatos1,\nEmpDatos2 y EmpDatos3). Estas páginas se van mostrando una a una y cada vez que\nllenamos una pasamos a la siguiente. Cuando terminamos de llenar la última página\ndebemos volver al WebPanel WWEmpleados.")]),a._v(" "),n("p",[a._v("Existen dos forma de implementar esta navegación y la elección del mecanismo a utilizar se\npuede determinar contestando a la pregunta: ¿El usuario debería poder volver un paso\nanterior luego que lo terminó? En caso que digamos que no nos interesa que pueda volver,\npodemos hacer la navegación al siguiente paso haciendo un “ir sin retorno”. De esta forma,\ncuando el usuario termine el último paso, podemos invocar a la subrutina para volver a la\npágina anterior, y como llamamos a los pasos intermedios sin retorno, volveremos al\nWebPanel WWEmpleados.")]),a._v(" "),n("p",[a._v("Planteemos ahora la situación en que queremos darle la libertad al usuario de poder volver\na un paso anterior luego que lo terminó. La ventaja de este esquema es la mayor libertad que\nle damos al usuario, en caso que se de cuenta que cometió un error puede volver a un paso\nanterior para corregirlo en lugar de tener que empezar todo nuevamente. Con este esquema\nya no podemos utilizar el “ir sin retorno”, sino que para ir al siguiente paso deberemos utilizar\nun “ir con retorno” para que el usuario pueda volver hacia atrás. Sin embargo, el problema\naquí es lograr volver a la página WWEmpleados luego que terminó el último paso. Para\nresolver este problema utilizaremos las marcas de navegación.")]),a._v(" "),n("p",[a._v("En primer lugar debemos asociarle una marca de navegación al WebPanel WWEmpleados\nque permita identificarlo. A modo de ejemplo, mostraremos como quedaría el elemento webui en este WebPanel (sólo se incluye la marca de navegación y el titulo)")]),a._v(" "),n("div",{staticClass:"language-xml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[a._v("    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("web-ui")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("title")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("Empleados"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("navigationMark")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("WWEmpleados"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])]),n("p",[a._v("Luego, en el último paso (el WebPanel EmpDatos3) deberíamos invocar a una subrutina para\nvolver al WebPanel WWEmpleados. Para lograr esto debemos agregar el atributo\ngenerateMarkedReturn con valor toConcreteMark en el elemento web-ui del WebPanel\nEmpDatos3. Un esquema de la definición del elemento web-ui en el WebPanel EmpDatos3\nsería:")]),a._v(" "),n("div",{staticClass:"language-xml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("web-ui")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("title")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("Datos del empleado (3)"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("generateMarkedReturn")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("toConcreteMark"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" \n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])]),n("p",[a._v("Al asignar este atributo se genera la subrutina “GP: Volver a marca &GP_Marca” que nos\npermite volver a una marca particular. Luego, dentro de la operación que confirma los datos del WebPanel EmpDatos3 debemos agregar el siguiente código para volver al WebPanel\nWWEmpleados:")]),a._v(" "),n("div",{staticClass:"language-genexus line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("&GP_Marca = \"WWEmpleados\"\nDo 'GP: Volver a marca &GP_Marca' \n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("p",[a._v("En este caso se utilizó el nombre del objeto para la marca. Esta no es una restricción, pero\nse recomienda utilizar el mismo nombre para facilitar la identificación de la marca. Sin\nembargo, se definen dos conceptos separados (el de marca de navegación y el nombre del\nobjeto) para poder manejarlos de forma independiente y evitar descomponer la navegación\nde la aplicación al cambiar el nombre de un objeto. Además, al tener dos conceptos distintos\nse pueden tener dos objetos que definan la misma marca de navegación, por ejemplo,\npodríamos tener otra versión del WebPanel WWEmpleados personalizado para un usuario en\nparticular, y al definir una marca de navegación con el mismo nombre podemos utilizar la\nmisma secuencia de WebPanels para agregar un nuevo empleado.")]),a._v(" "),n("p",[a._v("La lista completa de los valores del atributo generateMarkedReturn (dentro de web-ui) es la\nsiguiente:")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("ToConcreteMark: Genera la subrutina “GP: Volver a marca &GP_Marca” que permite\nvolver a la marca que se asigne en la variable “GP_Marca”")])]),a._v(" "),n("li",[n("p",[a._v("ToLastMark: Genera la subrutina “GP: Volver a última marca” que permite volver a la\núltima página que tenga una marca de navegación.")])]),a._v(" "),n("li",[n("p",[a._v("Both: Genera ambas subrutinas.")])]),a._v(" "),n("li",[n("p",[a._v("False: No genera ninguna subrutina de navegación a marca.")])])]),a._v(" "),n("p",[a._v("Adicionalmente en las subrutinas para volver a una página con marca se puede utilizar la\nvariable GP_NuevaUrl para volver a invocar a la página con otros parámetros. Se aplican las\nmismas consideraciones que para la subrutina “GP: Volver”. Ver sección 8.5 Volver a la\npágina anterior (cambiando los parámetros) para más información.")]),a._v(" "),n("h2",{attrs:{id:"llamadas-desde-otra-aplicacion"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#llamadas-desde-otra-aplicacion"}},[a._v("#")]),a._v(" Llamadas Desde otra Aplicación")]),a._v(" "),n("p",[a._v("Por motivos de seguridad no se permite invocar directamente a los WebPanels desde otras\naplicaciones. Este control se realiza para garantizar que se siga el flujo de navegación que\ndefinió el programador, sino, un usuario que conozca la URL asociada a un WebPanel podría\nejecutar directamente el WebPanel sin pasar por lo pasos previos que se definan (y así,\nsaltearse los controles de seguridad que hayamos definido en los programas). Por este\nmotivo, al navegar a una página se controla que se haya sido invocada dentro de un contexto\nde ejecución valido (esto incluye el menú, y cualquier llamada que hagamos desde código).")]),a._v(" "),n("p",[a._v("En caso que necesitemos que un programa generado con la herramienta Descartes pueda\nser invocado desde otra aplicación debemos definirlo como punto de acceso. Esto se realiza\nasignando el valor true al atributo accessPoint (del elemento web-ui). Cuando un WebPanel\nestá definido como punto de acceso no se controla que haya sido invocado dentro de la\naplicación, y se puede invocar desde otra aplicación.")])])}),[],!1,null,null,null);e.default=o.exports}}]);