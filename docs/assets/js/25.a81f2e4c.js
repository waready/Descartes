(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{466:function(e,a,s){"use strict";s.r(a);var n=s(65),t=Object(n.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"introduccion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduccion"}},[e._v("#")]),e._v(" Introducción")]),e._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#un-ejemplo-para-comenzar"}},[e._v("Un Ejemplo para Comenzar")])]),s("li",[s("a",{attrs:{href:"#armando-el-primer-ejecutable"}},[e._v("Armando el Primer Ejecutable")])]),s("li",[s("a",{attrs:{href:"#analisis-introspectivo"}},[e._v("Análisis Introspectivo")])]),s("li",[s("a",{attrs:{href:"#contenido"}},[e._v("Contenido")])]),s("li",[s("a",{attrs:{href:"#organizacion"}},[e._v("Organización")])]),s("li",[s("a",{attrs:{href:"#¿como-leer-este-material"}},[e._v("¿Cómo Leer este Material?")])]),s("li",[s("a",{attrs:{href:"#conocimientos-previos-necesarios"}},[e._v("Conocimientos Previos Necesarios")])])])]),s("p"),e._v(" "),s("p",[e._v("Esta es una guía de uso del diseñador "),s("code",[e._v("WebUI")]),e._v(" que pueda servir como punto de partida para aprender a utilizar las funcionalidades de este componente y como material de referencia para apoyar el proceso de desarrollo dentro de proyectos basados en el diseñador. En este documento encontrará ejemplos y descripciones de cómo utilizar el diseñador en los distintos casos de uso que resuelve. Esto incluye la definición de formularios, modelos de navegación, reporte de errores/advertencia, categorías y subcategorías, validación de datos, entre otras.")]),e._v(" "),s("p",[e._v("Dentro de este documento se describen las funcionalidades que brinda el diseñador "),s("code",[e._v("WebUI")]),e._v(". El componente, que llamamos diseñador "),s("code",[e._v("WebUI")]),e._v(", extiende a "),s("a",{attrs:{href:"https://www.genexus.com/es/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GeneXus"),s("OutboundLink")],1),e._v(" con un lenguaje declarativo específico para diseñar interfaces de aplicaciones Web.")]),e._v(" "),s("p",[e._v("La interfaz del diseñador es un "),s("a",{attrs:{href:"https://developer.mozilla.org/es/docs/Web/XML/XML_introduction",target:"_blank",rel:"noopener noreferrer"}},[e._v("XML"),s("OutboundLink")],1),e._v(". A través de este "),s("a",{attrs:{href:"https://developer.mozilla.org/es/docs/Web/XML/XML_introduction",target:"_blank",rel:"noopener noreferrer"}},[e._v("XML"),s("OutboundLink")],1),e._v(" se constituye la “definición del objeto”, aquí se definen los elementos que van a componer la interfaz y cómo se van a comportar. Luego, el diseñador toma esta definición y genera código HTML para visualizar el objeto y también código  "),s("a",{attrs:{href:"https://www.genexus.com/es/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GeneXus"),s("OutboundLink")],1),e._v(" para resolver varios aspectos de comportamiento (como por ejemplo pedidos de confirmación y validaciones).")]),e._v(" "),s("h2",{attrs:{id:"un-ejemplo-para-comenzar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#un-ejemplo-para-comenzar"}},[e._v("#")]),e._v(" Un Ejemplo para Comenzar")]),e._v(" "),s("p",[e._v("Para dar una idea inicial de cómo definir un WebPanel mostraremos un ejemplo sencillo y luego lo explicaremos. Como mencionamos en la presentación se utiliza un XML para definir la interfaz del WebPanel:")]),e._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("object-definition")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("libraryName")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("Dlya.Basic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("libraryVersion")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("1.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("Designer")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("WebUI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("web-ui")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("title")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("Persona"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("Form")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("field")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("caption")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("Nombre"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("data")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:"&"}},[e._v("&amp;")]),e._v("PerNom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("readOnly")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("allowNull")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("/>")])]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("line-break")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("/>")])]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("field")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("caption")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("Apellido"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("data")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:"&"}},[e._v("&amp;")]),e._v("PerApe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("readOnly")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("allowNull")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("/>")])]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("line-break")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("/>")])]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("value-list")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("caption")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("Sexo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("data")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:"&"}},[e._v("&amp;")]),e._v("PerSex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("readOnly")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("item")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("text")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("Femenino"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("F"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("/>")])]),e._v("\n                    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("item")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("text")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("Masculino"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("/>")])]),e._v("\n                "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("value-list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("Form")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("operations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("operation")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("caption")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("Confirmar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("validateData")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("/>")])]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("operation")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("caption")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("Cancelar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("validateData")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("/>")])]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("operations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("web-ui")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("object-definition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br")])]),s("p",[e._v("Este ejemplo consiste en una página para pedir datos básicos de una persona. La página está compuesta por un campo para el nombre, otro para el apellido y luego un cuadro que permite seleccionar el sexo de la persona. Adicionalmente, en esta página hay dos operaciones (que se representan con botones): una para confirmar los datos y otra para cancelar el ingreso de datos.")]),e._v(" "),s("p",[e._v("Para explorar la definición con más detalle la analizaremos línea a línea. En la línea "),s("Badge",{attrs:{type:"tip",text:"[1]",vertical:"top"}}),e._v(" se encuentra el cabezal de la definición, que indica que se va a utilizar el diseñador WebUI de la librería Dlya.Basic, esta declaración será obligatoria en todos los objetos. En la línea "),s("Badge",{attrs:{type:"tip",text:"[2]",vertical:"top"}}),e._v(" se define el cabezal de la interfaz, aquí se define el título de la página (“Persona”) y la clase (other). A través de la clase se indica para qué se utilizará la página, por ejemplo, si se va a utilizar como lista de selección se debe indicar la clase prompt. Sin embargo, aquí no se aplica una clase específica, por lo tanto es other.")],1),e._v(" "),s("img",{staticClass:"center",attrs:{src:e.$withBase("/img/01.png")}}),e._v(" "),s("p",[e._v("La línea "),s("Badge",{attrs:{type:"tip",text:"[3]",vertical:"top"}}),e._v(" contiene el elemento form. Este elemento se utiliza para indicar los campos del formulario, como campos de texto, listas de valores (ComboBox o RadioButton), casillas de chequeo (CheckBox), grillas, etc. Dentro del elemento form tenemos los campos de ingreso de datos. En la línea "),s("Badge",{attrs:{type:"tip",text:"[4]",vertical:"top"}}),e._v(" está definido el campo que pide el nombre de la persona. Para este campo en el atributo caption se le asocia el texto “Nombre”, el cual se muestra a la izquierda del campo. En el atributo data se indica la variable en donde se almacenará el valor ingresado (observar que se pone “&” antes del nombre de la variable, esta es la forma de representar al carácter “&” en XML). Luego, el atributo readOnly con valor false indica que se puede modificar el valor del campo y el atributo allowNull con valor false indica que el campo no se puede dejar vacío al confirmar los datos.")],1),e._v(" "),s("p",[e._v("De forma análoga se define el campo para ingresar el apellido en la línea "),s("Badge",{attrs:{type:"tip",text:"[6]",vertical:"top"}}),e._v(". Pero antes de esta definición, en la línea "),s("Badge",{attrs:{type:"tip",text:"[5]",vertical:"top"}}),e._v(" encontramos el elemento line-break. Este elemento se utiliza para indicar dónde termina una línea de campos. Si no se hubiera agregado este elemento, el campo para el nombre y el del apellido se mostrarían en la misma línea. En la línea "),s("Badge",{attrs:{type:"tip",text:"[7]",vertical:"top"}}),e._v(" hay otro line-break para que el cuadro de selección del sexo se ubique en la siguiente línea al apellido.")],1),e._v(" "),s("p",[e._v("Desde la línea "),s("Badge",{attrs:{type:"tip",text:"[8]",vertical:"top"}}),e._v(" hasta la "),s("Badge",{attrs:{type:"tip",text:"[13]",vertical:"top"}}),e._v(" se define una lista de valores para el sexo de la persona. Este elemento se visualiza como un control de tipo ComboBox. Para las lista de valores también están disponibles los atributos caption, data y readOnly, que tienen el mismo significado que en los casos anteriores. Los valores posibles del cuadro de valores se definen en las líneas "),s("Badge",{attrs:{type:"tip",text:"[10]",vertical:"top"}}),e._v(" y "),s("Badge",{attrs:{type:"tip",text:"[15]",vertical:"top"}}),e._v(". En la línea "),s("Badge",{attrs:{type:"tip",text:"[11]",vertical:"top"}}),e._v(" se define el elemento “Masculino”, al seleccionar este elemento se asigna “M” a la variable Sexo. De forma similar se define el valor “Femenino” con valor “F” en la línea "),s("Badge",{attrs:{type:"tip",text:"[10]",vertical:"top"}}),e._v(".")],1),e._v(" "),s("p",[e._v("Finalmente entre la línea "),s("Badge",{attrs:{type:"tip",text:"[15]",vertical:"top"}}),e._v(" y "),s("Badge",{attrs:{type:"tip",text:"[18]",vertical:"top"}}),e._v(" se definen las operaciones. Las mismas se representan como botones en la página. Las operaciones se definen dentro del elemento operations de la línea "),s("Badge",{attrs:{type:"tip",text:"[15]",vertical:"top"}}),e._v(". Aquí se puede observar que las operaciones están al mismo nivel que el elemento form. En la línea "),s("Badge",{attrs:{type:"tip",text:"[16]",vertical:"top"}}),e._v(" se define una operación con etiqueta “Confirmar”. Esta operación podría grabar los datos ingresados en una tabla. Debido a que para ejecutar esta operación se quiere garantizar que se hayan ingresado correctamente los datos se indicó el valor true en el atributo validateData. Este valor provoca que se validen los datos antes de ejecutar la operación. Por ejemplo, si el campo del apellido está vacío al apretar el botón “Confirmar”, se desplegará un error y no se ejecutará el código asociado a la operación como se muestra en la Figura 1-1. En la línea "),s("Badge",{attrs:{type:"tip",text:"[17]",vertical:"top"}}),e._v(" se define una operación para cancelar, debido a que esta operación no requiere que los datos sean válidos se indicó el valor false en el atributo validateData.")],1),e._v(" "),s("p",[e._v("Al generar el objeto el diseñador arma el código HTML de la página y escribe código GeneXus. Dentro del código que escribe el diseñador se crearán subrutinas que luego debemos implementar para completar la implementación del WebPanel. Por ejemplo, para definir el código que se ejecuta al realizar la operación “Confirmar” el diseñador crea la siguiente subrutina:")]),e._v(" "),s("div",{staticClass:"language-Genexus line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    Sub 'GU: Op -> Confirmar (Click)' //$ ... \n    // PARA HACER: Ingrese el código que se ejecuta al realizar la operación \n    EndSub // 'GU: Op -> Confirmar (Click)' \n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("En esta subrutina se deberá escribir el código asociado a la operación “Confirmar”. Al presionar el botón asociado a esta operación se invocará a la subrutina y se ejecutará el código que ingresamos aquí.")]),e._v(" "),s("h2",{attrs:{id:"armando-el-primer-ejecutable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#armando-el-primer-ejecutable"}},[e._v("#")]),e._v(" Armando el Primer Ejecutable")]),e._v(" "),s("p",[e._v("A partir del ejemplo anterior ahora vamos a intentar lograr un programa ejecutable. Se\ndescriben paso a paso las acciones que se deben realizar para definir el objeto y generarlo:")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("Ejecutar la herramienta Descartes (ver \\Dlya2001\\Descartes\\Documentación\\Guía\nde Instalación.pdf).")])]),e._v(" "),s("li",[s("p",[e._v("Abrir la Base de Conocimiento donde se va a agregar el nuevo objeto (File->Open\nKnowledge Base). Se debe utilizar una Base de Conocimiento que tenga algún\nmodelo para ejecutarse en ambiente Web. Adicionalmente, en la Base de\nConocimiento deben estar consolidados y generados los objetos GeneXus que utiliza\nel diseñador. Estos objetos están contenidos dentro del archivo Framwork.xpz, ver la\nGuía de Instalación para más información.")])]),e._v(" "),s("li",[s("p",[e._v("Crear un WebPanel nuevo (File->New->Object). Nota: Aquí se creará un nuevo objeto\ndesde la herramienta Descartes, pero se puede trabajar normalmente con objetos\ncreados desde GeneXus.")])]),e._v(" "),s("li",[s("p",[e._v("Luego de crear el WebPanel este quedará abierto. En la parte inferior se pueden ver\nuna serie de etiquetas que dicen: Definition, Rules, Source y Conditions. Al presionar\nsobre alguna de ellas podremos editar las reglas del objeto, su código fuente, las\ncondiciones o la definición. Para continuar este ejemplo editaremos la definición\n(Definition), dentro de la definición se indica el XML que define la interfaz del objeto.")])]),e._v(" "),s("li",[s("p",[e._v("Copiar el XML de la sección anterior en la definición. Nota: En el XML no se deben\nindicar los números que aparecen en el comienzo de cada línea del ejemplo (estos\nnúmeros fueron agregados únicamente con fines didácticos para explicar el\nsignificado de cada línea)")])]),e._v(" "),s("li",[s("p",[e._v("Generar el objeto (F9 o Build->Generate "),s("code",[e._v("<objeto>")]),e._v("). Al generar el objeto se crea el\ncódigo HTML que permite visualizarlo en ejecución, y adicionalmente se crea código\nGeneXus. Sin embargo, la primera vez que presionemos F9 en este ejemplo se\nproducirán una serie de errores porque la definición hace referencia a variables que\nno están definidas.")])]),e._v(" "),s("li",[s("p",[e._v("La herramienta Descartes cuando encuentra variables que no están definidas\npregunta si se quieren agregar. Apretar la tecla Y o presionar el botón “Yes” para que\nla herramienta defina las variables faltantes.")])]),e._v(" "),s("li",[s("p",[e._v("Luego de confirmar la creación de las variables, se muestra un dialogo que lista las\nvariables creadas y sus propiedades. Cuando se definen variables con el nombre de\nun atributo o un prefijo más el nombre (por ejemplo, PCliCod, siendo CliCod el nombre\nde un atributo) la herramienta creará las variables basadas en el atributo. Sin\nembargo, si no se cumplen estas condiciones se crearán de tipo numérico. En este\ncaso necesitaremos variables de tipo Character, por lo tanto debemos modificarlas.\nPara cambiar el tipo de una variable debemos hacer clic sobre ella en la lista de la\nizquierda, y luego editarle sus propiedades a la derecha.\nAntes de continuar al siguiente paso asignar los siguientes tipos:")]),e._v(" "),s("ul",[s("li",[e._v("PerApe: Type=Character, Length=30")]),e._v(" "),s("li",[e._v("PerNom: Type=Character, Length=30")])])])]),e._v(" "),s("p",[e._v("A partir del ejemplo anterior ahora vamos a intentar lograr un programa ejecutable. Se\ndescriben paso a paso las acciones que se deben realizar para definir el objeto y generarlo:")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("Ejecutar la herramienta Descartes (ver \\Dlya2001\\Descartes\\Documentación\\Guía\nde Instalación.pdf).")])]),e._v(" "),s("li",[s("p",[e._v("Abrir la Base de Conocimiento donde se va a agregar el nuevo objeto (File->Open\nKnowledge Base). Se debe utilizar una Base de Conocimiento que tenga algún\nmodelo para ejecutarse en ambiente Web. Adicionalmente, en la Base de\nConocimiento deben estar consolidados y generados los objetos GeneXus que utiliza\nel diseñador. Estos objetos están contenidos dentro del archivo Framwork.xpz, ver la\nGuía de Instalación para más información.")])]),e._v(" "),s("li",[s("p",[e._v("Crear un WebPanel nuevo (File->New->Object). Nota: Aquí se creará un nuevo objeto\ndesde la herramienta Descartes, pero se puede trabajar normalmente con objetos\ncreados desde GeneXus.")])]),e._v(" "),s("li",[s("p",[e._v("Luego de crear el WebPanel este quedará abierto. En la parte inferior se pueden ver\nuna serie de etiquetas que dicen: Definition, Rules, Source y Conditions. Al presionar\nsobre alguna de ellas podremos editar las reglas del objeto, su código fuente, las\ncondiciones o la definición. Para continuar este ejemplo editaremos la definición\n(Definition), dentro de la definición se indica el XML que define la interfaz del objeto.")])]),e._v(" "),s("li",[s("p",[e._v("Copiar el XML de la sección anterior en la definición. Nota: En el XML no se deben\nindicar los números que aparecen en el comienzo de cada línea del ejemplo (estos\nnúmeros fueron agregados únicamente con fines didácticos para explicar el\nsignificado de cada línea)")])]),e._v(" "),s("li",[s("p",[e._v("Generar el objeto (F9 o Build->Generate "),s("code",[e._v("<objeto>")]),e._v("). Al generar el objeto se crea el\ncódigo HTML que permite visualizarlo en ejecución, y adicionalmente se crea código\nGeneXus. Sin embargo, la primera vez que presionemos F9 en este ejemplo se\nproducirán una serie de errores porque la definición hace referencia a variables que\nno están definidas.")])]),e._v(" "),s("li",[s("p",[e._v("La herramienta Descartes cuando encuentra variables que no están definidas\npregunta si se quieren agregar. Apretar la tecla Y o presionar el botón “Yes” para que\nla herramienta defina las variables faltantes.")])]),e._v(" "),s("li",[s("p",[e._v("Luego de confirmar la creación de las variables, se muestra un dialogo que lista las\nvariables creadas y sus propiedades. Cuando se definen variables con el nombre de\nun atributo o un prefijo más el nombre (por ejemplo, PCliCod, siendo CliCod el nombre\nde un atributo) la herramienta creará las variables basadas en el atributo. Sin\nembargo, si no se cumplen estas condiciones se crearán de tipo numérico. En este\ncaso necesitaremos variables de tipo Character, por lo tanto debemos modificarlas.\nPara cambiar el tipo de una variable debemos hacer clic sobre ella en la lista de la\nizquierda, y luego editarle sus propiedades a la derecha.\nAntes de continuar al siguiente paso asignar los siguientes tipos:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v(" > PerApe: Type=Character, Length=30 \n > PerNom: Type=Character, Length=30\n")])])])])]),e._v(" "),s("h2",{attrs:{id:"analisis-introspectivo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#analisis-introspectivo"}},[e._v("#")]),e._v(" Análisis Introspectivo")]),e._v(" "),s("p",[e._v("Al ejecutar el objeto generado anteriormente no veremos un programa muy funcional, ya que\nno hemos programado la lógica de las operaciones. Sin embargo, sirve como ejemplo para\nver cómo luce el objeto generado y para entender mejor cómo funciona la herramienta\nDescartes. Con este último fin vamos a analizar los elementos que fueron generados.\nCuando generamos un objeto con Descartes se define:")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("El formulario Web")]),e._v(": Consiste en el código HTML que define el aspecto visual del objeto.")]),e._v(" "),s("li",[s("strong",[e._v("Eventos y Subrutinas")]),e._v(": Comprenden eventos y subrutinas que se crean para resolver\nparte de la lógica de la interfaz (por ejemplo, validación de campos nulos). Las\nsubrutinas generadas también incluyen modelos de subrutinas para que\nimplementemos. Por ejemplo, por cada operación se genera una subrutina para que\nescribamos el código que se ejecuta al presionar la operación. En otros casos, como\nveremos más adelante, el generador sugiere el código que debemos escribir y luego\npodremos hacerle modificaciones. Sin embargo, no se pueden modificar todas las\nsubrutinas generadas, sólo se pueden modificar las que tienen prefijo “GU” porque\nsi no al volver a generar se perderán los cambios.")]),e._v(" "),s("li",[s("strong",[e._v("Variables")]),e._v(": Dentro de los elementos generados también se incluyen variables que\nutiliza el diseñador de forma interna, y otras que sirven como interfaz entre lo que es\ngenerado y lo que tenemos que programar nosotros. Por ejemplo, al utilizar una grilla\npara desplegar una lista de datos el diseñador nos carga una variable con la cantidad\nde registros cargados, que podemos utilizar luego para recorrerla.\nLa generación de eventos, subrutinas y variables se realiza analizando los elementos que\nestán definidos en el objeto, agregando los que faltan y quitando los que fueron generados\npreviamente y no son necesarios. Se puede hacer una analogía con los análisis de impacto\nde GeneXus. Es decir, en tiempo de generación el diseñador define todos los eventos,\nsubrutinas y variables que necesita, luego se determinan que cambios hay que hacerle al\nobjeto y finalmente se impacta el objeto.\nComo se mencionó previamente, dentro de las subrutinas generadas hay algunas que\npodemos modificar y otras que no. Existen varios tipos de alcances en eventos, subrutinas y\nvariables; al crear dichos elementos el diseñador les asocia un alcance según el uso que le\ndé, y esto nos determina si podemos modificarlo o no y cómo tenemos que utilizarlo. A\ncontinuación se muestra una lista de los alcances y una guía de cómo reconocerlos:")]),e._v(" "),s("li",[s("strong",[e._v("Usuario")]),e._v(": Este alcance se presenta únicamente en subrutinas, y agrupa a las\nsubrutinas que crea el diseñador pero que quedan a cargo del programador\nmantenerlas. Un ejemplo de estas subrutinas son las que se generan por operación.\nEl diseñador por cada operación crea una subrutina pero luego debemos escribir en\nella el código que se ejecuta al presionar el botón de la operación. El mantenimiento\nde las subrutinas de usuario están a cargo de nosotros, por lo tanto, si volvemos a\ngenerar la definición no se modificará el código de las subrutinas de usuario que ya\nestén creadas. Las subrutina de usuario se pueden reconocer porque tienen prefijo\n“GU” (Generated - User), por ejemplo, “GU: Op -> Confirmar (Click)”.")]),e._v(" "),s("li",[s("strong",[e._v("Publico")]),e._v(": El alcance público se aplica a subrutinas y variables. Los elementos con este\nalcance representan los elementos que crea el diseñador para que utilicemos pero\nque el diseñador se encarga de mantenerlo. Si bien podemos hacer referencia a estos\nelementos (ya sea porque invocamos a una subrutina, o consultamos el valor de una\nvariable pública) no podemos modificarlos. Si volvemos a generar se descartan los\ncambios hechos y el generador vuelve a escribir el código de estos elementos. Las\nvariables y subrutinas publicas tienen el prefijo “GP” (Generated - Public), por\nejemplo, variable GP_Mensaje y subrutina “GP: Reportar mensaje”.")]),e._v(" "),s("li",[s("strong",[e._v("Interno")]),e._v(": Este alcance comprende los eventos, subrutinas y variables que crea el\ndiseñador para utilizar de forma interna. Los elementos que son creados con este\nalance no los podemos modificar, ni tampoco podemos hacer referencia a ellos\nporque podrían desaparecer en futuras versiones del diseñador, ya que se asume\nque únicamente los utiliza el diseñador de forma interna. Los elementos que tienen\neste alcance tienen prefijo “ZG”, por ejemplo, variable ZG1_I1 y subrutina 'ZG1: Check\npage integrity'.\nComo se mencionó previamente el generador analiza qué subrutinas, eventos y variables son\nnecesarias, y elimina las que no son necesarias. Por ejemplo, si definimos una operación y\ngeneramos el diseñador crea una subrutina para implementar la operación; si luego\nborramos la operación de la definición y volvemos a generar, se detectará que la subrutina\nya no es necesaria y se preguntará si se quiere eliminar (únicamente se pide confirmación\npara las subrutinas de usuario, el resto son eliminados sin pedido de confirmación). Para\npoder mantener la relación entre las subrutinas generadas y los elementos de la definición\nse agrega automáticamente el atributo id en los elementos de la definición. Si observamos\nla definición del objeto luego de generar podremos ver que se le agregó un identificador a\ncada elemento, y luego los eventos, subrutinas y variables generadas quedan asociados al\nidentificador del elemento. De esta forma se puede determinar cuáles son necesarios y\ncuales no al cambiar la definición y volver a generar. Por lo tanto, si se copia un elemento de\nun lugar a otro de la definición, y no se quiere perder el código que tiene asociado, se debe\nmantener el atributo id con su valor. En caso que se copie un elemento para tenerlo como\nbase para crear uno nuevo, se debe borrar el atributo id o asignar uno nuevo (si se detecta\nal generar que hay dos elementos con el mismo identificador, se muestra un dialogo para\nasignarle uno nuevo a alguno de ellos).")])]),e._v(" "),s("h2",{attrs:{id:"contenido"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contenido"}},[e._v("#")]),e._v(" Contenido")]),e._v(" "),s("p",[e._v("El resto de este manual se encuentra organizado por secciones que describen las\nfuncionalidades del diseñador. Se recomienda hacer una lectura general de todas las\nsecciones para conocer que ofrece el diseñador, y luego utilizar este manual como referencia\npara resolver cada caso concreto que se presente. Las secciones son:")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Elemento web-ui")]),e._v(": Dentro del elemento web-ui se encuentran varios atributos\ngenerales de las interfaces Web. En esta sección se describen estos atributos y se\nexplica cómo debe definirse el elemento web-ui según el caso.")]),e._v(" "),s("li",[s("strong",[e._v("Componentes básicos de un formulario")]),e._v(": Aquí se describen los elementos que ofrece\nel diseñador para armar un formulario. A partir de estos elementos se define el\ningreso y la visualización de datos.")]),e._v(" "),s("li",[s("strong",[e._v("Operaciones")]),e._v(": Describe los atributos de las operaciones y analiza cómo deben\nutilizarse según el caso.")]),e._v(" "),s("li",[s("strong",[e._v("Grillas")]),e._v(": Las grillas permiten mostrar una tabla con datos. El diseñador ofrece una\nserie de elementos que permiten resolver varias situaciones comunes, como filtros,\npaginado y edición de valores. En esta sección se hace una exploración de todas las\nfuncionalidades y se muestra cómo utilizarlas.")]),e._v(" "),s("li",[s("strong",[e._v("Datos ocultos")]),e._v(": Debido a la naturaleza sin estado de la arquitectura Web, para no\nperder los valores de las variables es necesario almacenarlos en algún lado. Una\nforma de hacer esto es a través de datos ocultos. Esta sección explica como\ndefinirlos.")]),e._v(" "),s("li",[s("strong",[e._v("Categorías y subcategorías")]),e._v(": Para diseñar páginas con muchos datos el diseñador\nofrece la posibilidad de organizarlos en categorías y subcategorías, aquí se explorará\neste tema.")]),e._v(" "),s("li",[s("strong",[e._v("Navegación")]),e._v(": En una aplicación Web se le llama navegación a la proceso de ir de una\npágina a otra. Dentro de esta sección se examinan los mecanismos que ofrece el\ndiseñador para navegar entre páginas.")]),e._v(" "),s("li",[s("strong",[e._v("Reporte de errores/advertencias")]),e._v(": Explica cómo se deben reportar errores y\nadvertencias.")]),e._v(" "),s("li",[s("strong",[e._v("Propiedades dinámicas")]),e._v(": Varios elementos de la interfaz tienen propiedades que\npueden cambiar de valor según el estado de la página. El diseñador permite definir\nlos valores de estas propiedades en función de expresiones, por ejemplo, podemos\ndefinir que el campo\n“Código” está habilitado según el valor de la variable Mode. En esta sección se explica\ncómo funciona este mecanismo y cuales son las propiedades dinámicas.")]),e._v(" "),s("li",[s("strong",[e._v("Validaciones")]),e._v(": El diseñador ofrece también algunos atributos que permiten hacer\nvalidaciones de datos automáticas. Esta sección explora cómo utilizar estas\nfuncionalidades para escribir menos código de validación.")])]),e._v(" "),s("h2",{attrs:{id:"organizacion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#organizacion"}},[e._v("#")]),e._v(" Organización")]),e._v(" "),s("p",[e._v("Las secciones de esta guía se desarrollan introduciendo primero los conceptos básicos sobre cada tema, y a medida que se profundiza se irán presentando usos más complejos y avanzados del diseñador.")]),e._v(" "),s("p",[e._v("Los conceptos básicos intentan identificar el problema que se estudiará en la sección, y luego rápidamente se presentaran los elementos que ofrece el diseñador para resolver los escenarios más comunes. Al llegar al final de la sección se habrán presentado todos los elementos que ofrece el diseñador para resolver los distintos escenarios del problema que se analiza en la sección.")]),e._v(" "),s("p",[e._v("El material se presenta como una guía que intenta asistir al lector para resolver cada una de las situaciones que abarcar el diseñador. Con este fin, se incluyeron una buena cantidad de ejemplos y se intentó agrupar en un único lugar toda la información necesaria para resolver cada problema concreto.")]),e._v(" "),s("h2",{attrs:{id:"¿como-leer-este-material"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#¿como-leer-este-material"}},[e._v("#")]),e._v(" ¿Cómo Leer este Material?")]),e._v(" "),s("p",[e._v("Este material sirve como referencia de todas las funcionalidades que ofrece el diseñador. Por lo tanto una buena forma de aprender a utilizar adecuadamente el diseñador es hacer una lectura profunda de todo este material.")]),e._v(" "),s("p",[e._v("Sin embargo, se recomienda aprender a utilizar el diseñador por sucesivas aproximaciones. Como primera lectura se recomienda abarcar los conceptos básicos que se incluyen al comienzo de cada sección, y luego hacer una lectora rápida del resto del contenido. Esto permitirá tener una idea general del uso del diseñador en las situaciones más usuales, y tener una idea básica del resto de las funcionalidades más avanzadas. De esta forma, cuando se nos presente un problema de diseño de interfaces Web sabremos si el diseñador tiene una solución para la misma y luego podremos profundizar en la sección que corresponda para aprender a aplicarla.")]),e._v(" "),s("h2",{attrs:{id:"conocimientos-previos-necesarios"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conocimientos-previos-necesarios"}},[e._v("#")]),e._v(" Conocimientos Previos Necesarios")]),e._v(" "),s("p",[e._v("Dentro de esta guía se asume que se tienen buenos conocimientos de GeneXus, y al menos conocimiento básico de cómo funciona una aplicación en ambiente Web. En la guía no se hará un análisis detallado de la arquitectura Web, únicamente se harán pequeñas menciones a conceptos básicos para introducir funcionalidades del diseñador. Debido a que la definición de las páginas Web se hace a través de un XML, también es necesario tener una idea básica de cómo construir un XML.")])])}),[],!1,null,null,null);a.default=t.exports}}]);